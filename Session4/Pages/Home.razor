@page "/"
@using Session4.Model
@using Microsoft.AspNetCore.Components.Web
@using System.IO
@inject IJSRuntime JS
@using System.Text.Json

<div style=" width:100rem; display:flex; flex-direction:column; justify-content:center; align-items:center">
    <h3 style="display:flex; align-self:flex-start">Сотрудники</h3>
    <div class="overflow-auto" style="display:flex; justify-content:center; flex-direction:row; width:100rem; ">
        @foreach (Employee item in employees!)
        {
            <div class="card" style="min-width:12rem; max-height:10rem; background-color:#78B24B;">
                <div class="card-body" style="width:100%; height:100%; display:flex; flex-direction:column; justify-content:space-between">
                    <h6 class="card-title" style="font-size:14px; color:white; margin: 1px">@item.Surname @item.FirstName @item.SecondName</h6>
                    <p class="card-text" style="font-size:10px; color:white; margin: 1px">@item.Position</p>
                    <p class="card-text" style="font-size:10px; color:white; margin: 1px">@item.Email</p>
                    <p class="card-text" style="font-size:10px; color:white; margin: 1px">@item.PhoneWork</p>
                    <div style="display:flex; justify-content:space-between; flex-direction:row;">
                        <p class="card-text" style="font-size:10px; color:white; margin: 1px">@Convert.ToDateTime(item.BirthDay.ToString())!.ToString("M")</p>
                        <a class="btn btn-primary" href="/qr/@item.IdEmployee" style="height:15px; width:4px;
                                    display:flex; justify-content:center; align-items:center">
                            <img src="qricon.png" style="width:15px" />
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>
    <div style="display:flex; justify-content:space-between; flex-direction:row; width:100rem; margin-top:3rem">
        <div>
            <div>
                <h3>Календарь</h3>
                <div class="container"><input class="form-control" id="datepicker" type="text" /></div>
            </div>
            <div style="margin-top:3rem">
                <h3>События</h3>
                @foreach (Event item in events!)
                {
                    <div class="card" style="min-width:15rem; max-height:12rem; background-color:#78B24B; margin: 5px">
                        <div class="card-body" style="width:100%; height:100%; display:flex; flex-direction:column; justify-content:space-between">
                            <h6 class="card-title" style="font-size:18px; color:white; height:20%">@item.EventName</h6>
                            <p class="card-text" style="font-size:14px; color:white; height:20%">@item.EventDescription</p>
                            <div style="display:flex; justify-content:space-between; flex-direction:row;">
                                <div style="display:flex; flex-direction:row; align-items:center">
                                    <a href="/event/@item.IdEvent" class="btn btn-primary" style="height:15px; width:4px;
                                    display:flex; justify-content:center; align-items:center">
                                        <img src="calendar.png" style="width: 15px; margin:2px" />
                                    </a>
                                    <p class="card-text" style="font-size:12px; color:white">@item.DateOfEvent.ToString("d")</p>
                                </div>

                                <p class="card-text" style="font-size:12px; color:white">
                                    @employees.FirstOrDefault(p => p.IdEmployee == item.EventManagers)!.Surname
                                    @employees.FirstOrDefault(p => p.IdEmployee == item.EventManagers)!.FirstName.Substring(0, 1). @employees.FirstOrDefault(p => p.IdEmployee == item.EventManagers)!.SecondName!.Substring(0, 1).
                                </p>
                            </div>

                        </div>
                    </div>
                }
            </div>
        </div>
        <div style="width:70rem">
            <h3>Новости</h3>
            <div style="width:65rem; display:flex; flex-direction:row; flex-wrap:wrap; height:30rem">
                @foreach (Newss item in newss!)
                {
                    <div class="card" style="width:40%; height:60%; background-color:#78B24B; margin: 5px">
                        <div style="width:100%; height:40%; background-color: lightgray"></div>
                        <div class="card-body" style="display:flex; flex-direction:column;; height:60%; justify-content:space-between">

                            <div>
                                <h6 class="card-title" style="font-size:12px; color:white; font-size:16px">@item.Title</h6>
                                <p class="card-text" style="font-size:8px; color:white; font-size:12px">@item.Description</p>
                            </div>

                            <p class="card-text" style="font-size:8px; color:white; font-size:14px">@item.Date.ToString("d")</p>
                        </div>
                    </div>
                }
            </div>
            
           
        </div>
    </div>
</div>


<script>
    var ranged = new Datepicker('#datepicker', {
    inline: true,
    ranged: false,
    time: false
    });
</script>

@code {
    private List<Employee>? employees = new();
    private List<Event>? events = new();
    private List<WorkingCalendar>? workingDays = new();
    private List<Newss>? newss = new();
    private HttpClient httpClient = new HttpClient();
    protected override async Task OnInitializedAsync()
    {
        employees = await httpClient.GetFromJsonAsync<List<Employee>>("http://localhost:5142/Employees");
        events = await httpClient.GetFromJsonAsync<List<Event>>("http://localhost:5142/Events");
        workingDays = await httpClient.GetFromJsonAsync<List<WorkingCalendar>>("http://localhost:5142/WorkingDays");
        newss = await httpClient.GetFromJsonAsync<List<Newss>>("http://localhost:5142/News");
    }
}