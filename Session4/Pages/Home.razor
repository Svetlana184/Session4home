@page "/"

<PageTitle>Home</PageTitle>

<h3>Сотрудники</h3> 
<div class="overflow-auto" style="display:flex; justify-content:center; flex-direction:row; width:77rem">
    @foreach (var item in employees!) 
    {
        <div class="card" style="min-width:10rem; max-height:8rem; background-color:#78B24B; margin: 5px">
            <div class="card-body"> 
                <h6 class="card-title" style="font-size:8px; color:white">@item.Surname @item.FirstName @item.SecondName</h6>
                <p class="card-text" style="font-size:8px; color:white">@item.Position</p>
                <p class="card-text" style="font-size:8px; color:white">@item.Email</p>
                <p class="card-text" style="font-size:8px; color:white">@item.PhoneWork</p>
            </div> 
        </div> 
    } 
</div>  
<div style="display:flex; justify-content:space-between; flex-direction:row; width:77rem; margin-top:3rem">
    <div>
        <div>
            <h3>Календарь</h3>
            <div style="width:18rem; height:16rem; background-color:lightgray"></div>
        </div>
        <div>
            <h3>События</h3>
            @foreach (var item in events!)
            {
                <div class="card" style="min-width:15rem; max-height:7rem; background-color:#78B24B; margin: 5px">
                    <div class="card-body">
                        <h6 class="card-title" style="font-size:8px; color:white">@item.EventName</h6>
                        <p class="card-text" style="font-size:8px; color:white">@item.EventDescription</p>
                        <p class="card-text" style="font-size:8px; color:white">@item.DateOfEvent</p>
                        <p class="card-text" style="font-size:8px; color:white">@item.EventManagers</p>
                    </div>
                </div>
            }

        </div>
    </div>
    <div>
        <h3>Новости</h3>
    </div>
</div>

@code {
    private List<Employee>? employees = new();
    private List<Event>? events = new();
    private HttpClient httpClient = new HttpClient();

    protected override async Task OnInitializedAsync()
    {
        employees = await httpClient.GetFromJsonAsync<List<Employee>>("http://localhost:5107/Employees");
        events = await httpClient.GetFromJsonAsync<List<Event>>("http://localhost:5107/Events");
        
    }



    public class Employee
    {

        public int IdEmployee { get; set; }

        public string Surname { get; set; } = null!;

        public string FirstName { get; set; } = null!;

        public string? SecondName { get; set; }

        public string Position { get; set; } = null!;

        public string PhoneWork { get; set; } = null!;

        public string? Phone { get; set; }

        public string Cabinet { get; set; } = null!;

        public string Email { get; set; } = null!;

        public int IdDepartment { get; set; }

        public int? IdHelper { get; set; }

        public string? Other { get; set; }

        public DateOnly? BirthDay { get; set; }

        public int? IdBoss { get; set; }

        public DateTime? IsFired { get; set; }

    }

    public class Event
    {
        public int IdEvent { get; set; }

        public string EventName { get; set; } = null!;

        public string TypeOfEvent { get; set; } = null!;

        public string EventStatus { get; set; } = null!;

        public string EventDescription { get; set; } = null!;

        public DateTime DateOfEvent { get; set; }

        public string EventManagers { get; set; } = null!;

        public string TypeOfClass { get; set; } = null!;

    }


}

