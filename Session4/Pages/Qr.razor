@page "/qr/{Id:int}"
@using IronQr;
@using IronSoftware.Drawing;
@using Microsoft.AspNetCore
@using QRCoder
@using System.Drawing

<h3>Qr</h3>

<img alt="" src="@QRByte" width="300" class="mb-5" />

@code {
    [Parameter]
    public int? Id { get; set; }



    public string? QRCodeText { get; set; }
    public string QRByte = "";
    private static List<Employee>? employees = new();
    private HttpClient httpClient = new HttpClient();
    // private Employee? employee = employees!.FirstOrDefault(p => p.IdEmployee == Id);
    // public int t { get; set; }


    protected override async Task OnInitializedAsync()
    {
        employees = await httpClient.GetFromJsonAsync<List<Employee>>("http://localhost:5142/Employees");
        GenerateQRCode();
    }

    public void GenerateQRCode()
    {
        Employee employee = employees!.FirstOrDefault(p => p.IdEmployee == Id)!;
        QRCodeText = employee.Surname;
        if (!string.IsNullOrEmpty(QRCodeText))
        {
            using (QRCodeGenerator qrGenerator = new QRCodeGenerator())
            using (QRCodeData qrCodeData = qrGenerator.CreateQrCode(QRCodeText, QRCodeGenerator.ECCLevel.Q))
            using (var qrCode = new QRCoder.BitmapByteQRCode(qrCodeData))
            {
                var qrCodeImage = qrCode.GetGraphic(20);
                string  base64Text = Convert.ToBase64String(qrCodeImage);
                QRByte = string.Format("data:image/bmp;base64,{0}",base64Text);
            }
        }
    }





    public class Employee
    {

        public int IdEmployee { get; set; }

        public string Surname { get; set; } = null!;

        public string FirstName { get; set; } = null!;

        public string? SecondName { get; set; }

        public string Position { get; set; } = null!;

        public string PhoneWork { get; set; } = null!;

        public string? Phone { get; set; }

        public string Cabinet { get; set; } = null!;

        public string Email { get; set; } = null!;

        public int IdDepartment { get; set; }

        public int? IdHelper { get; set; }

        public string? Other { get; set; }

        public DateOnly? BirthDay { get; set; }

        public int? IdBoss { get; set; }

        public DateTime? IsFired { get; set; }
    }
}


@* @code {
    public string CreateQr(){
        var qr = QrCode.EncodeText("Hello", QrCode.Ecc.Medium);
        var t = qr.ToSvgString(2);
        t.
    } *@

